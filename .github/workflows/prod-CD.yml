name: NONSOOLMATE PROD CD

on:
  push:
    branches: [ "prod" ]

jobs:
  prod-ci:
    runs-on: ubuntu-22.04

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: resources 폴더 내 파일 생성
        run: |
          mkdir -p nonsoolmate-api/src/main/resources
          echo "${{ secrets.SECRET_PROPERTIES }}" > nonsoolmate-api/src/main/resources/application-secret.properties
          mkdir -p nonsoolmate-api/src/main/resources/key
          echo "${{ secrets.CLOUDFRONT_PRIVATE_KEY }}" > nonsoolmate-api/src/main/resources/key/cloudfront-private-key.pem
          mkdir -p nonsoolmate-batch/src/main/resources
          echo "${{ secrets.SECRET_PROPERTIES }}" > nonsoolmate-batch/src/main/resources/application-secret.properties

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build
        shell: bash

      - name: docker build 가능하도록 환경 설정
        uses: docker/setup-buildx-action@v2

      - name: docker hub에 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        run: |
          cd nonsoolmate-api
          docker build --platform linux/amd64 -t nonsoolmate/nonsoolmate-prod-server --build-arg SPRING_PROFILES_ACTIVE=prod .
          docker push nonsoolmate/nonsoolmate-prod-server
        working-directory: ${{ env.working-directory }}

  prod-cd:
    needs: prod-ci
    runs-on: ubuntu-20.04

    steps:
      - name: 도커 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_KEY }}
          script: |
            cd ~
            ./deploy.sh

